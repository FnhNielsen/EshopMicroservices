version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-product_service:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data/product-service-data:/data/db
    networks:
      - default

  mongo-inventory_service:
    image: mongo:6-jammy
    ports:
      - "27018:27017"
    expose:
      - "27018"
    volumes:
      - ./mongo-data/inventory-service-data:/data/db
    networks:
      - default


  eureka-server:
    image: springcloud/eureka
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - default

networks:
  default:

  redis-cart_service:
    image: redis:7.2.3-alpine
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "6379" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zipkin:
    image: "openzipkin/zipkin"
    ports:
      - "9411:9411"

  cart_service:
    build:
      context: .
      dockerfile: cart_service/Dockerfile
    ports:
      - "8002:80"
    depends_on:
      "kafka-broker":
        condition: service_healthy
      "redis-cart_service":
        condition: service_healthy

  cart-api-dapr:
    image: "daprio/daprd:1.9.4"
    network_mode: "service:cart_service"
    command:
      [
        "./daprd",
        "-app-id",
        "cart_service",
        "-app-port",
        "80",
        "-log-level",
        "debug",
        "-placement-host-address",
        "dapr-placement:50000",
        "-components-path",
        "./dapr/components",
        "-config",
        "./dapr/config.yaml"
      ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      "kafka-broker":
        condition: service_healthy

#networks:
#  default:
